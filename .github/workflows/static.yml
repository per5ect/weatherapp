# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions: write-all

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Create and populate .Renviron file
        env:
          WEATHER_API_URL: ${{ secrets.WEATHER_API_URL }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          IMAGE_API_URL: ${{ secrets.IMAGE_API_URL }}
          IMAGE_ACCESS_KEY: ${{ secrets.IMAGE_ACCESS_KEY }}
        run:
          touch env.js
          echo "WEATHER_API_URL=$WEATHER_API_URL" >> env.js
          echo "WEATHER_API_KEY=$WEATHER_API_KEY" >> env.js
          echo "IMAGE_API_URL=$IMAGE_API_URL" >> env.js
          echo "IMAGE_ACCESS_KEY=$IMAGE_ACCESS_KEY" >> env.js
        
          echo "cat env.js"
          cat env.js
        
          echo "ls -a ."
          ls -a .
        
          echo "ls -a ${{ github.workspace }}"
          ls -a ${{ github.workspace }}
        shell: bash
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
